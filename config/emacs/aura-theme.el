;; -*- lexical-binding: t -*-

(require 'doom-themes)

(defun make-color-fn (palette)
  (lambda (name)
    (let ((color (cdr (assoc name palette))))
      (when color
        (list color nil nil)))))

(let ((aura-variants
      '((aura-dark .
        ((purple  . "#a277ff")
         (green   . "#61ffca")
         (orange  . "#ffca85")
         (red     . "#ff6767")
         (pink    . "#f694ff")
         (white   . "#edecee")
         (gray    . "#6d6d6d")
         (black   . "#15141b")
         (purple_faded . "#3d375e")
         (blue    . "#82e2ff")))
        (aura-dark-soft-text .
        ((purple  . "#8464c6")
         (green   . "#53c59f")
         (orange  . "#c7a06f")
         (red     . "#c55858")
         (pink    . "#c17ac8")
         (white   . "#bdbdbd")
         (gray    . "#6d6d6d")
         (black   . "#15141b")
         (purple_faded . "#3d375e")
         (blue    . "#6cb2c7")))
        (aura-soft-dark .
        ((purple  . "#a277ff")
         (green   . "#61ffca")
         (orange  . "#ffca85")
         (red     . "#ff6767")
         (pink    . "#f694ff")
         (white   . "#edecee")
         (gray    . "#6d6d6d")
         (black   . "#21202e")
         (purple_faded . "#3d375e")
         (blue    . "#82e2ff")))
        (aura-soft-dark-soft-text .
        ((purple  . "#8464c6")
         (green   . "#54c59f")
         (orange  . "#c7a06f")
         (red     . "#c55858")
         (pink    . "#c17ac8")
         (white   . "#bdbdbd")
         (gray    . "#6d6d6d")
         (black   . "#21202e")
         (purple_faded . "#3d375e")
         (blue    . "#6cb2c7"))))))
  (let* ((pair (assoc 'aura-soft-dark-soft-text aura-variants))
	(palette (cdr pair))
	(palettef (make-color-fn palette)))
    (def-doom-theme aura-soft-dark-soft-text
      "Aura soft dark soft text"
      ((bg         (funcall palettef 'black))
       (bg-alt     (funcall palettef 'black))
       (base0      (funcall palettef 'black))
       (base1      '("#30343F" nil   nil )) ;; とりあえず決め打ち
       (base2      '("#3F484F" nil   nil ))
       (base3      '("#565B5E" nil   nil ))
       (base4      (funcall palettef 'gray))
       (base5      '("#858C89" nil   nil ))
       (base6      '("#9DABA4" nil   nil ))
       (base7      '("#ADB4B1" nil   nil ))
       (base8      (funcall palettef 'white))
       (fg         (funcall palettef 'white))
       (fg-alt     (funcall palettef 'gray))

       (grey       (funcall palettef 'gray))
       (red        (funcall palettef 'red))
       (orange     (funcall palettef 'orange))
       (green      (funcall palettef 'green))
       (teal       (funcall palettef 'green))
       (yellow     (funcall palettef 'orange))
       (blue       (funcall palettef 'blue))
       (dark-blue  (funcall palettef 'blue))
       (magenta    (funcall palettef 'purple))
       (violet     (funcall palettef 'pink))
       (cyan       (funcall palettef 'green))
       (dark-cyan  (funcall palettef 'blue))
       (purple_faded (funcall palettef 'purple_faded ))

       (highlight      blue)
       (vertical-bar   bg)
       (selection      purple_faded)
       (builtin        magenta)
       (comments       grey)
       (doc-comments   grey)
       (constants      magenta)
       (functions      orange)
       (keywords       magenta)
       (methods        orange)
       (operators      magenta)
       (type           blue)
       (strings        green)
       (variables      fg)
       (numbers        green)
       (region         purple_faded)
       (error          red)
       (warning        orange)
       (success        green)
       (vc-modified    blue)
       (vc-added       green)
       (vc-deleted     red)))))
