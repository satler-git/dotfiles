name: Build nix configs
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    paths:
      - '**/*.nix'
      - 'flake.lock'
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        host:
          - desktop
    steps:
      - uses: actions/checkout@v4

      - name: Check the flake
        uses: DeterminateSystems/flake-checker-action@main

      - name: actions-cloc
        uses: maxfie1d/actions-cloc@v1
  check-expr:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        host:
          - desktop
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Setup Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Build Nix Flake
        run: nix --experimental-features 'nix-command flakes' build .#nixosConfigurations.${{ matrix.host }}.config.system.build.toplevel -L --no-link --dry-run
